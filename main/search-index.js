var searchIndex = JSON.parse('{\
"figures":{"doc":"A small math library specialized for 2d screen graphics.","tn":["Angle","Approx","Ceil","Degrees","DisplayScale","Displayable","Extents","ExtentsRect","Figure","Floor","One","Pixels","Pixels","Point","Points","Points","Radians","Rect","Rectlike","Round","Scale","Scaled","Scaled","Size","Sized","SizedRect","Vector","Vectorlike","Zero","abs","abs","abs","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_eq","abs_diff_ne","abs_diff_ne","abs_diff_ne","abs_diff_ne","abs_diff_ne","abs_diff_ne","abs_diff_ne","add","add","add","add","add","add","add","add","add","add","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","add_assign","additional_scale","approx_eq","approx_eq","approx_eq","approx_eq","approx_eq","approx_eq","approx_eq","approx_eq","approx_ne","approx_ne","area","area","area","as_extents","as_extents","as_extents","as_extents","as_rect","as_rect","as_rect","as_rect","as_sized","as_sized","as_sized","as_sized","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","borrow_mut","cast","cast","cast","cast","cast","cast","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","cast_unit","ceil","ceil","ceil","ceil","ceil","ceil","ceil","ceil","center","center","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","clone_into","cmp","cmp","cmp","cmp","cmp","contains","contains","default","default","default","default","default","default","default","default","default","default","default","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_epsilon","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_relative","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","default_max_ulps","degrees","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","deserialize","div","div","div","div","div","div","div","div","div","div","div","div","div_assign","div_assign","dpi_scale","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","eq","extent","extents","floor","floor","floor","floor","floor","floor","floor","floor","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","fmt","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from","from_figures","from_figures","from_figures","from_height","from_width","from_x","from_x","from_y","from_y","get","get","height","height","height","height","height","height","inflate","inflate","inflate","inflate","intersection","intersection","into","into","into","into","into","into","into","into","into","into","into","into","into","inverse","is_empty","is_empty","is_zero","max","max","max","max","min","min","min","min","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul","mul_assign","mul_assign","ne","neg","neg","neg","neg","new","new","new","new","new","new","new","new","one","one","one","one","origin","origin","origin","origin","origin","origin","partial_cmp","partial_cmp","partial_cmp","partial_cmp","partial_cmp","radians","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_eq","relative_ne","relative_ne","relative_ne","relative_ne","relative_ne","relative_ne","relative_ne","rem","rem","rem_assign","rem_assign","round","round","round","round","round","round","round","round","round_in","round_in","round_in","round_out","round_out","round_out","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","serialize","set_additional_scale","set_dpi_scale","signum","signum","signum","size","size","size","sized","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","sub_assign","to_f32","to_f64","to_i128","to_i16","to_i32","to_i64","to_i8","to_isize","to_non_empty","to_non_empty","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_owned","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_pixels","to_point","to_point","to_point","to_point","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_points","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_scaled","to_size","to_size","to_size","to_size","to_u128","to_u16","to_u32","to_u64","to_u8","to_usize","to_vector","to_vector","to_vector","to_vector","total_scale","transform_point","transform_vector","translate","translate","translate","translate","try_cast","try_cast","try_cast","try_cast","try_cast","try_cast","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_from","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","try_into","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","type_id","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_eq","ulps_ne","ulps_ne","ulps_ne","ulps_ne","ulps_ne","ulps_ne","ulps_ne","union","union","width","width","width","width","width","width","x","x","x","x","y","y","y","y","zero","zero"],"q":["figuresd":["An angle of rotation.","Allows comparing floating point numbers with …","Defines the smallest integer equal or greater than the …","An angle expressed in degrees.","Scaling ratios for [<code>Scaled</code>] and [<code>Displayable</code>].","Methods for converting between display scales.","An [<code>ExtentsRect</code>].","A rectangle that uses two [<code>Point</code>]s for representation.","A value in a specific unit.","Defines the biggest integer equal or lower than the …","Returns a one value.","A unit representing physical pixels.","The [<code>Pixels</code>] unit type for this implementor.","A location represented by an x and y value.","A unit representing DPI-adjusted resolution configured on …","The [<code>Points</code>] unit type for this implementor.","An angle expressed in radians.","A 2d rectangle. This type may internally be represented …","Functionalitiy that all rectangle types implement","Defines the nearest integer value to the original value.","Allows converting between <code>UnitA</code> and <code>UnitB</code> by multiplying …","A unit representing virtual pixels that are scaled on top …","The [<code>Scaled</code>] unit type for this implementor.","A measurement of space using width and height.","A [<code>SizedRect</code>].","A rectangle that uses a [<code>Point</code>] and a [<code>Size</code>] for …","A 2d measurement using x and y values.","Methods that enable converting between 2d types that have …","Returns a zero value.","Returns a new instance with the absolute value of each …","Returns a new instance with the absolute value of each …","Returns a new instance with the absolute value of each …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the scale between [<code>Points</code>] and [<code>Scaled</code>].","Returns true if the values are approximately equal. Uses […","","","","","","","","Returns true if the values are not approximately equal. …","Returns true if the values are not approximately equal. …","Returns the area contained by this rectangle.","Returns the area contained by this rectangle.","Returns the area represented by this size.","Returns this rectangle converted to an [<code>ExtentsRect</code>].","","","","Returns this rectangle as a <code>Rect</code>. The rectangle’s …","","","","Returns this rectangle converted to a [<code>SizedRect</code>].","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Casts <code>T</code> to <code>NewT</code>.","Casts <code>T</code> to <code>NewT</code>.","Casts <code>T</code> to <code>NewT</code>.","Converts from <code>T</code> to <code>Output</code>.","Converts from <code>T</code> to <code>Output</code>.","Converts from <code>T</code> to <code>Output</code>.","Returns this value with the new unit. Does not affect the …","Returns this value with the new unit. Does not affect the …","Returns this value with the new unit. Does not affect the …","Returns this value with the new unit. Does not affect the …","Returns this value with the new unit. Does not affect the …","Returns this value with the new unit. Does not affect the …","Returns this value with the new unit. Does not affect the …","Rounds to the smallest integer equal or greater than the …","","","","","","","","Returns the center of the rectangle.","Returns the center of the rectangle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns true if <code>point</code> is within this rectangle.","Returns true if <code>point</code> is within this rectangle.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns this angle, converting to degrees if necessary.","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the scale between [<code>Pixels</code>] and [<code>Points</code>].","","","","","","","","","","","","","","","","The non-origin point of the rectangle.","Returns a new rect using points <code>origin</code> and <code>extent</code>.","Rounds to the biggest integer equal or lower than the …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns a new `","Returns a new `","Returns a new `","Returns a new vector with <code>height</code>, and <code>T::default()</code> for …","Returns a new vector with <code>width</code>, and <code>T::default()</code> for …","Returns a new point with <code>x</code>, and <code>T::default()</code> for <code>y</code>.","Returns a new vector with <code>x</code>, and <code>T::default()</code> for <code>y</code>.","Returns a new point with <code>y</code>, and <code>T::default()</code> for <code>x</code>.","Returns a new vector with <code>y</code>, and <code>T::default()</code> for <code>x</code>.","Returns the inner value","Returns the scaling ratio.","Returns the height of the rectangle.","","","","Returns the","","Increases the size of this rectangle by the vector …","","","","Returns the intersecting area between the two rectangles. …","Returns the intersecting area between the two rectangles. …","","","","","","","","","","","","","","Returns the inverse of this scale.","Returns true if the rect doesn’t have a positive width …","Returns true if the rect doesn’t have a positive width …","","Returns the larger value of <code>self</code> and <code>rhs</code>.","Returns a new `","Returns a new `","Returns a new `","Returns the smaller value of <code>self</code> and <code>rhs</code>.","Returns a new `","Returns a new `","Returns a new `","","","","","","","","","","","","","","","","","","","","","Returns a new instance with the two scales provided.","Returns a new figure with <code>value</code>.","Returns a new rectangle using <code>origin</code> and <code>size</code>.","Returns a new rectangle using <code>origin</code> and <code>extent</code>.","Returns a new scale with the given <code>ratio</code>.","Returns a new `","Returns a new `","Returns a new `","Returns a one value.","","","","Returns the origin of the rectangle.","","","","The origin of the rectangle.","The origin of the rectangle.","","","","","","Returns this angle, converting to radians if necessary.","","","","","","","","","","","","","","","","","","","Rounds to the nearest integer value.","","","","","","","","Returns a new rectangle that rounds the origin up using …","Returns a new rectangle that rounds the origin up using …","Returns a new rectangle that rounds the origin up using …","Returns a new rectangle that rounds the origin down using …","Returns a new rectangle that rounds the origin down using …","Returns a new rectangle that rounds the origin down using …","","","","","","","","","","","","","Sets the scale factor between [<code>Points</code>] and [<code>Scaled</code>].","Sets the scale factor between [<code>Pixels</code>] and [<code>Points</code>].","Returns a <code>Vector</code> with the result of <code>signum()</code> called on …","Returns a <code>Vector</code> with the result of <code>signum()</code> called on …","Returns a <code>Vector</code> with the result of <code>signum()</code> called on …","Returns the size of the rectangle.","Returns the size of the rectangle.","The size of the rectangle.","Returns a new rect using <code>origin</code> and <code>size</code>.","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Checks to see if this rect is empty. If it is, None is …","Checks to see if this rect is empty. If it is, None is …","","","","","","","","","","","","","","Returns this value after applying <code>scale</code>, if needed.","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> as a <code>Point</code>.","","","","Returns this value after applying <code>scale</code>, if needed.","","","","","","","","","","","","","","","","","","","","","","Returns this value after applying <code>scale</code>, if needed.","","","","","","","","","","","","","","","","","","","","","","Returns <code>self</code> as a <code>Size</code>.","","","","","","","","","","Returns <code>self</code> as a <code>Vector</code>.","","","","Returns the scale between [<code>Pixels</code>] and [<code>Scaled</code>].","Transforms <code>point</code> around 0,0 by this angle.","Transforms <code>vector</code> around 0,0 by this angle.","Moves this rectangle by the vector provided.","","","","Attempts to cast <code>T</code> to <code>NewT</code>. If unsuccessful, None is …","Attempts to cast <code>T</code> to <code>NewT</code>. If unsuccessful, None is …","Attempts to cast <code>T</code> to <code>NewT</code>. If unsuccessful, None is …","Attempts to convert from <code>T</code> to <code>Output</code> using <code>NumCast</code>. …","Attempts to convert from <code>T</code> to <code>Output</code> using <code>NumCast</code>. …","Attempts to convert from <code>T</code> to <code>Output</code> using <code>NumCast</code>. …","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","","Returns the union of the two rectangles. If both …","Returns the union of the two rectangles. If both …","Returns the width of the rectangle.","","","","Returns the","","Returns the","Returns the","","","Returns the","Returns the","","","Returns a zero value.",""],"i":[0,0,0,1,0,0,2,0,0,0,0,0,3,0,0,3,1,0,0,0,0,0,3,0,2,0,0,0,0,4,5,6,7,2,8,9,4,5,6,7,2,8,9,4,5,6,1,7,7,4,4,5,5,5,6,6,1,7,7,4,4,5,5,5,6,6,10,11,7,2,8,9,4,5,6,11,11,12,12,4,12,2,8,9,12,2,8,9,12,2,8,9,1,13,14,15,10,7,2,8,9,16,4,5,6,1,13,14,15,10,7,2,8,9,16,4,5,6,2,8,9,4,5,6,7,2,8,9,4,5,6,17,7,2,8,9,4,5,6,12,12,1,13,14,15,10,7,2,8,9,16,4,5,6,1,13,14,15,10,7,2,8,9,16,4,5,6,13,14,15,7,16,12,12,1,13,14,15,7,2,8,9,4,5,6,7,2,8,9,4,5,6,7,2,8,9,4,5,6,7,2,8,9,4,5,6,1,1,13,14,15,7,2,8,9,16,4,5,6,7,7,7,2,8,9,4,4,5,5,6,6,7,7,10,13,14,15,7,2,8,9,16,4,4,5,5,5,6,6,9,2,18,7,2,8,9,4,5,6,1,13,14,15,10,7,2,8,9,16,4,5,6,1,13,14,15,10,7,7,7,7,2,2,2,2,8,8,9,16,16,16,4,4,5,5,6,6,6,4,5,6,4,4,5,6,5,6,7,16,12,2,8,9,4,4,12,2,8,9,12,12,1,13,14,15,10,7,2,8,9,16,4,5,6,16,12,12,7,7,4,5,6,7,4,5,6,7,7,7,2,8,9,16,4,4,5,5,6,6,7,7,16,7,4,5,6,10,7,8,9,16,4,5,6,19,10,7,16,12,2,8,9,8,9,13,14,15,7,16,1,7,2,8,9,4,5,6,7,2,8,9,4,5,6,7,7,7,7,20,7,2,8,9,4,5,6,2,8,9,2,8,9,1,13,14,15,7,2,8,9,16,4,5,6,10,10,4,5,6,12,12,8,2,1,7,7,4,4,5,5,5,6,6,1,7,7,4,4,5,5,5,6,6,7,7,7,7,7,7,7,7,12,12,1,13,14,15,10,7,2,8,9,16,4,5,6,3,7,7,7,2,2,2,8,8,8,9,9,9,4,4,4,5,5,5,6,6,6,21,4,5,6,3,7,7,7,2,2,2,8,8,8,9,9,9,4,4,4,5,5,5,6,6,6,3,7,7,7,2,2,2,8,8,8,9,9,9,4,4,4,5,5,5,6,6,6,21,4,5,6,7,7,7,7,7,7,21,4,5,6,10,1,1,12,2,8,9,2,8,9,4,5,6,1,13,14,15,10,7,2,8,9,16,4,5,6,1,13,14,15,10,7,2,8,9,16,4,5,6,1,13,14,15,10,7,2,8,9,16,4,5,6,7,2,8,9,4,5,6,7,2,8,9,4,5,6,12,12,12,2,8,9,4,4,5,6,5,6,5,6,5,6,22,7],"f":[null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,null,[[]],[[]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[["vector",3]]],[[]],[[["size",3]]],[[]],[[["vector",3]]],[[]],[[["size",3]]],[[]],[[]],[[]],[[["vector",3]]],[[]],[[["vector",3]]],[[]],[[["size",3]]],[[]],[[["size",3]]],[[],[["scaled",3],["points",3],["scale",3]]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],[[],["extentsrect",3]],[[],["extentsrect",3]],[[],["extentsrect",3]],[[]],[[],["rect",4]],[[],["rect",4]],[[],["rect",4]],[[],["rect",4]],[[],["sizedrect",3]],[[],["sizedrect",3]],[[]],[[],["sizedrect",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],[["rect",4],["numcast",8],["copy",8]]],[[],[["sizedrect",3],["numcast",8],["copy",8]]],[[],[["numcast",8],["copy",8],["extentsrect",3]]],[[],[["copy",8],["numcast",8],["size",3]]],[[],[["point",3],["copy",8],["numcast",8]]],[[],[["vector",3],["copy",8],["numcast",8]]],[[],["figure",3]],[[],["rect",4]],[[],["sizedrect",3]],[[],["extentsrect",3]],[[],["size",3]],[[],["point",3]],[[],["vector",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["point",3]],[[],["point",3]],[[],["angle",4]],[[],["points",3]],[[],["pixels",3]],[[],["scaled",3]],[[],["displayscale",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["points",3]],["ordering",4]],[[["pixels",3]],["ordering",4]],[[["scaled",3]],["ordering",4]],[[],["ordering",4]],[[["scale",3]],["ordering",4]],[[["point",3]],["bool",15]],[[["point",3]],["bool",15]],[[]],[[],["points",3]],[[],["pixels",3]],[[],["scaled",3]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[],["u32",15]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[]],[[]],[[["scale",3]]],[[["scale",3]]],[[["scale",3]]],[[["scale",3]]],[[]],[[["scale",3]]],[[]],[[["scale",3]]],[[]],[[["scale",3]]],[[]],[[]],[[],[["pixels",3],["points",3],["scale",3]]],[[["points",3]],["bool",15]],[[["pixels",3]],["bool",15]],[[["scaled",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["scale",3]],["bool",15]],[[["vector",3]],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[["size",3]],["bool",15]],[[["vector",3]],["bool",15]],[[["size",3]],["bool",15]],[[],["bool",15]],null,[[["point",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[["formatter",3]],["result",6]],[[]],[[]],[[]],[[]],[[]],[[]],[[["toprimitive",8]],["option",4]],[[]],[[]],[[]],[[["sizedrect",3]]],[[["size",3]]],[[["extentsrect",3]]],[[["size",3]]],[[]],[[]],[[]],[[]],[[]],[[["vector",3]]],[[]],[[["vector",3]]],[[]],[[]],[[["size",3]]],[[["point",3]]],[[["figure",3]]],[[["figure",3]]],[[["figure",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],null,[[["into",8],["vector",3]]],[[["into",8],["vector",3]]],[[["into",8],["vector",3]]],[[["into",8],["vector",3]]],[[],[["option",4],["extentsrect",3]]],[[],[["option",4],["extentsrect",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["scale",3]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["scale",3]]],[[["scale",3]]],[[["scale",3]]],[[["scale",3]]],[[]],[[["scale",3]]],[[]],[[["scale",3]]],[[]],[[]],[[["scale",3]]],[[]],[[]],[[["scale",3]],["bool",15]],[[]],[[]],[[]],[[]],[[["points",3],["scale",3],["pixels",3],["scaled",3],["scale",3]]],[[]],[[["size",3],["point",3]]],[[["point",3]]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["point",3]],[[],["point",3]],[[],["point",3]],[[],["point",3]],null,null,[[["points",3]],[["option",4],["ordering",4]]],[[["pixels",3]],[["option",4],["ordering",4]]],[[["scaled",3]],[["option",4],["ordering",4]]],[[],[["ordering",4],["option",4]]],[[["scale",3]],[["option",4],["ordering",4]]],[[]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[],["bool",15]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[["scaled",3],["points",3],["scale",3]]],[[["scale",3],["points",3],["pixels",3]]],[[],["vector",3]],[[],["vector",3]],[[],["vector",3]],[[],["size",3]],[[],["size",3]],null,[[["size",3],["point",3]]],[[]],[[]],[[]],[[["vector",3]]],[[]],[[]],[[["vector",3]]],[[["size",3]]],[[]],[[["size",3]]],[[]],[[]],[[]],[[]],[[["vector",3]]],[[["size",3]]],[[]],[[["vector",3]]],[[["size",3]]],[[]],[[],[["f32",15],["option",4]]],[[],[["f64",15],["option",4]]],[[],[["i128",15],["option",4]]],[[],[["i16",15],["option",4]]],[[],[["option",4],["i32",15]]],[[],[["i64",15],["option",4]]],[[],[["option",4],["i8",15]]],[[],[["isize",15],["option",4]]],[[],["option",4]],[[],["option",4]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[],["point",3]],[[],["point",3]],[[],["point",3]],[[],["point",3]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[["displayscale",3]]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[],["size",3]],[[],[["u128",15],["option",4]]],[[],[["option",4],["u16",15]]],[[],[["u32",15],["option",4]]],[[],[["option",4],["u64",15]]],[[],[["u8",15],["option",4]]],[[],[["usize",15],["option",4]]],[[],["vector",3]],[[],["vector",3]],[[],["vector",3]],[[],["vector",3]],[[],[["scaled",3],["pixels",3],["scale",3]]],[[["point",3]],["point",3]],[[["vector",3]],["vector",3]],[[["into",8],["vector",3]]],[[["into",8],["vector",3]]],[[["into",8],["vector",3]]],[[["into",8],["vector",3]]],[[],[["option",4],["rect",4]]],[[],[["sizedrect",3],["option",4]]],[[],[["option",4],["extentsrect",3]]],[[],[["size",3],["option",4]]],[[],[["option",4],["point",3]]],[[],[["vector",3],["option",4]]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[],["typeid",3]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[["u32",15]],["bool",15]],[[],[["option",4],["extentsrect",3]]],[[],[["option",4],["extentsrect",3]]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],[[],["figure",3]],null,[[],["figure",3]],[[],["figure",3]],null,null,[[],["figure",3]],[[],["figure",3]],null,null,[[]],[[]]],"p":[[4,"Angle"],[4,"Rect"],[8,"Displayable"],[3,"Size"],[3,"Point"],[3,"Vector"],[3,"Figure"],[3,"SizedRect"],[3,"ExtentsRect"],[3,"DisplayScale"],[8,"Approx"],[8,"Rectlike"],[3,"Points"],[3,"Pixels"],[3,"Scaled"],[3,"Scale"],[8,"Ceil"],[8,"Floor"],[8,"One"],[8,"Round"],[8,"Vectorlike"],[8,"Zero"]]},\
"xtask":{"doc":"","t":[4,3,13,11,11,11,11,11,11,11,11,11,11,11,11,11,11,11,5,11,11,11,11,11,11,12],"n":["Args","CodeCoverageConfig","GenerateCodeCoverageReport","augment_clap","borrow","borrow","borrow_mut","borrow_mut","clap","fmt","from","from","from_clap","from_subcommand","ignore_paths","into","into","is_subcommand","main","try_from","try_from","try_into","try_into","type_id","type_id","install_dependencies"],"q":["xtask","","","","","","","","","","","","","","","","","","","","","","","","","xtask::Args"],"d":["","","","","","","","","","","","","","","","","","","","","","","","","",""],"i":[0,0,1,1,2,1,2,1,1,1,2,1,1,1,2,2,1,1,0,2,1,2,1,2,1,3],"f":[null,null,null,[[["app",3]],["app",3]],[[]],[[]],[[]],[[]],[[],["app",3]],[[["formatter",3]],["result",6]],[[]],[[]],[[["argmatches",3]]],[[],["option",4]],[[],[["string",3],["vec",3]]],[[]],[[]],[[],["bool",15]],[[],["result",6]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["result",4]],[[],["typeid",3]],[[],["typeid",3]],null],"p":[[4,"Args"],[3,"CodeCoverageConfig"],[13,"GenerateCodeCoverageReport"]]}\
}');
if (window.initSearch) {window.initSearch(searchIndex)};